apply plugin: "war"
apply plugin: 'org.akhikhl.gretty'

buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        classpath 'org.akhikhl.gretty:gretty:1.4.0'
    }
}


[compileJava, compileTestJava, javadoc]*.options*.encoding = 'UTF-8'


repositories {
    maven {
        url 'http://repo1.maven.org/maven2'
    }
}

dependencies {
    compile project(':core')
    compile(
            "jstl:jstl:1.2",
            "org.springframework:spring-webmvc:$springVersion",
    )

}
gretty {
    debugPort = 5005      // 默认
    debugSuspend = true   // 默认
    port = 9090
    contextPath = '/'
    afterEvaluate {
        appRunDebug {
            debugPort = 5005
            debugSuspend = true
        }
    }
}

//复制web依赖的core项目生成代码
task addDependenceClasses(type: Copy) {
    delete project(":app").buildDir
    // print file(file(project(":core").buildDir).absolutePath + "/classes/main")
    println project(":app").resources.text
    from file(project(":core").buildDir).absolutePath + "/classes"
    into project(":app").buildDir.absolutePath + "/classes/main"

    from file(project(":core").buildDir).absolutePath + "/resources"
    into project(":app").buildDir.absolutePath + "/classes"
    // exclude { details -> (details.file.name == "mybatisGenerator.xml") }
}

war {
    dependsOn addDependenceClasses
}
task testWar(type: War, dependsOn: classes) {
    baseName = 'test'
    classpath = classpath - files("$buildDir/resources/main")
    classpath = classpath + files("$projectDir/src/main/env/test")
    destinationDir = file("$buildDir/libs")
}

task devWar(type: War, dependsOn: classes) {
    baseName = 'pro'
    classpath = classpath - files("$buildDir/resources/main")
    classpath = classpath + files("$projectDir/src/main/env/pro")
    destinationDir = file("$buildDir/libs")
}

task release(dependsOn: [devWar, testWar])


